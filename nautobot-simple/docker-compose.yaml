---
services:
  nautobot:
    image: "veritassot/nautobot:${NAUTOBOT_IMAGE:-2.4.8}-py${PYTHON_VER:-3.12}-onboarding"
    env_file:
      - "local.env"
      - "creds.env"
    ports:
      - "8443:8443"
      - "8080:8080"
    depends_on:
      - "postgres"
      - "redis"
    restart: "unless-stopped"
    networks:
      - backend

  celery_worker:
    image: "veritassot/nautobot:${NAUTOBOT_IMAGE:-2.4.8}-py${PYTHON_VER:-3.12}-onboarding"
    entrypoint: "sh -c 'nautobot-server celery worker -l $$NAUTOBOT_LOG_LEVEL'"
    healthcheck:
      interval: "5s"
      timeout: "5s"
      start_period: "5s"
      retries: 3
      test: ["CMD", "nautobot-server", "health_check"]
    depends_on:
      - "nautobot"
      - "redis"
    env_file:
      - "local.env"
      - "creds.env"
    tty: true
    networks:
      - backend

  celery_beat:
    image: "veritassot/nautobot:${NAUTOBOT_IMAGE:-2.4.0}-py${PYTHON_VER:-3.12}-onboarding"
    entrypoint: "sh -c 'nautobot-server celery beat -l $$NAUTOBOT_LOG_LEVEL'"
    healthcheck:
      interval: "5s"
      timeout: "5s"
      start_period: "5s"
      retries: 3
      test: ["CMD", "nautobot-server", "health_check"]
    depends_on:
      - "nautobot"
      - "redis"
    env_file:
      - "local.env"
      - "creds.env"
    tty: true
    networks:
      - backend

  redis:
    image: "redis:alpine"
    env_file:
      - "local.env"
      - "creds.env"
    command:
      - "sh"
      - "-c"  # this is to evaluate the $REDIS_PASSWORD from the env
      - "redis-server --appendonly yes --requirepass $$NAUTOBOT_REDIS_PASSWORD"  ## $$ because of docker-compose
    restart: "unless-stopped"
    networks:
      - backend
  
  postgres:
    image: "postgres:13-alpine"
    env_file:
      - "local.env"
      - "creds.env"
    command:
      - "-c"
      - "max_connections=1000"
    volumes:
      # - "./nautobot.sql:/tmp/nautobot.sql"
      - "postgres_data:/var/lib/postgresql/data"
    healthcheck:
      test: "pg_isready --username=$$POSTGRES_USER --dbname=$$POSTGRES_DB"
      interval: "10s"
      timeout: "5s"
      retries: 10
    networks:
      - backend

volumes:
  postgres_data: {}
networks:
  backend:
    name: nautobot_backend
    driver: bridge
    